services:
  # API网关
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://localhost:3001
      - BASE_SERVICE_URL=http://localhost:3002
      - CATTLE_SERVICE_URL=http://localhost:3003
    network_mode: host
    restart: unless-stopped

  # 用户认证服务
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.local
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=auth_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - JWT_SECRET=your-jwt-secret-key
    network_mode: host
    restart: unless-stopped

  # 基地管理服务
  base-service:
    build:
      context: ./base-service
      dockerfile: Dockerfile.local
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=base_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 牛只管理服务
  cattle-service:
    build:
      context: ./cattle-service
      dockerfile: Dockerfile.local
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=cattle_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
      - BASE_SERVICE_URL=http://localhost:3002
    network_mode: host
    restart: unless-stopped