services:
  # API网关
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://localhost:3001
      - BASE_SERVICE_URL=http://localhost:3002
      - CATTLE_SERVICE_URL=http://localhost:3003
      - HEALTH_SERVICE_URL=http://localhost:3004
      - FEEDING_SERVICE_URL=http://localhost:3005
    network_mode: host
    restart: unless-stopped

  # 用户认证服务
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=auth_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - JWT_SECRET=your-jwt-secret-key
    network_mode: host
    restart: unless-stopped

  # 基地管理服务
  base-service:
    build:
      context: ./base-service
      dockerfile: Dockerfile.local
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=base_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 牛只管理服务
  cattle-service:
    build:
      context: ./cattle-service
      dockerfile: Dockerfile.local
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=cattle_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
      - BASE_SERVICE_URL=http://localhost:3002
    network_mode: host
    restart: unless-stopped

  # 健康管理服务
  health-service:
    build:
      context: ./health-service
      dockerfile: Dockerfile.local
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=health_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
      - CATTLE_SERVICE_URL=http://localhost:3003
    network_mode: host
    restart: unless-stopped

  # 饲养管理服务
  feeding-service:
    build:
      context: ./feeding-service
      dockerfile: Dockerfile.local
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=feeding_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
      - CATTLE_SERVICE_URL=http://localhost:3003
    network_mode: host
    restart: unless-stopped

  # 设备管理服务
  equipment-service:
    build:
      context: ./equipment-service
      dockerfile: Dockerfile.local
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=equipment_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 采购管理服务
  procurement-service:
    build:
      context: ./procurement-service
      dockerfile: Dockerfile.local
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=procurement_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 销售管理服务
  sales-service:
    build:
      context: ./sales-service
      dockerfile: Dockerfile.local
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=sales_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
      - CATTLE_SERVICE_URL=http://localhost:3003
    network_mode: host
    restart: unless-stopped

  # 物料管理服务
  material-service:
    build:
      context: ./material-service
      dockerfile: Dockerfile.local
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=material_db
      - DB_USER=postgres
      - DB_PASSWORD=dianxin99
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 通知服务
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

  # 文件服务
  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://localhost:3001
    volumes:
      - ./uploads:/app/uploads
    network_mode: host
    restart: unless-stopped

  # 监控服务
  monitoring-service:
    build:
      context: ./monitoring-service
      dockerfile: Dockerfile
    ports:
      - "3012:3012"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://localhost:6379
      - AUTH_SERVICE_URL=http://localhost:3001
    network_mode: host
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge