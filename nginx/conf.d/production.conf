# HTTP重定向到HTTPS
server {
    listen 80;
    server_name cattle-management.com www.cattle-management.com;
    
    # Let's Encrypt验证
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# 主站点 - HTTPS
server {
    listen 443 ssl http2;
    server_name cattle-management.com www.cattle-management.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cattle-management.com.crt;
    ssl_certificate_key /etc/nginx/ssl/cattle-management.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/cattle-management.com.chain.crt;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # 限制连接数
    limit_conn conn_limit_per_ip 20;
    
    # 根目录 - 前端应用
    location / {
        proxy_pass http://frontend_static;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态文件缓存
        proxy_cache static_cache;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # 缓存头
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }
    
    # API接口 - 负载均衡
    location /api/ {
        # 限流
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 连接设置
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 超时设置
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓存配置 (仅对GET请求)
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_no_cache $http_pragma $http_authorization;
        
        # 添加缓存状态头
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # 登录接口 - 特殊限流
    location /api/v1/auth/login {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 不缓存登录请求
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # 文件上传 - 大文件支持
    location /api/v1/upload/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 大文件上传配置
        client_max_body_size 100M;
        client_body_timeout 120s;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # 静态文件服务 - 上传的文件
    location /uploads/ {
        alias /app/uploads/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # 安全设置
        location ~* \.(php|jsp|asp|sh|pl|py)$ {
            deny all;
        }
    }
    
    # WebSocket支持 (如果需要)
    location /ws/ {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket超时设置
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 监控端点 (仅内网访问)
    location /metrics {
        allow 172.20.0.0/16;
        deny all;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 静态资源优化
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend_static;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 压缩
        gzip_static on;
    }
    
    # 安全设置 - 隐藏敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 管理后台 - 子域名
server {
    listen 443 ssl http2;
    server_name admin.cattle-management.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cattle-management.com.crt;
    ssl_certificate_key /etc/nginx/ssl/cattle-management.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/cattle-management.com.chain.crt;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # IP白名单 (管理后台仅允许特定IP访问)
    # allow 192.168.1.0/24;
    # allow 10.0.0.0/8;
    # deny all;
    
    # 基本认证 (双重保护)
    # auth_basic "Admin Area";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    
    location / {
        proxy_pass http://frontend_static;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# API专用域名
server {
    listen 443 ssl http2;
    server_name api.cattle-management.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cattle-management.com.crt;
    ssl_certificate_key /etc/nginx/ssl/cattle-management.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/cattle-management.com.chain.crt;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CORS设置
    add_header Access-Control-Allow-Origin "https://cattle-management.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials true always;
    
    # 处理预检请求
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://cattle-management.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API缓存
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_no_cache $http_pragma $http_authorization;
        
        add_header X-Cache-Status $upstream_cache_status;
    }
}