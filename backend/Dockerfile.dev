# Backend Development Dockerfile
# Optimized for development with hot reload and debugging

FROM node:18-alpine as base

# Install system dependencies
RUN apk add --no-cache \
    curl \
    bash \
    git \
    python3 \
    make \
    g++

# Set working directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files
COPY package*.json ./

# Development stage
FROM base as development

# Install all dependencies (including dev dependencies)
RUN npm ci --include=dev

# Install global development tools
RUN npm install -g \
    nodemon \
    ts-node \
    typescript \
    @types/node \
    tsconfig-paths

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p logs uploads uploads/temp uploads/cattle uploads/documents

# Set permissions
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose ports
EXPOSE 3000 9229

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Default command for development with debugging
CMD ["npm", "run", "dev:debug"]

# Production stage (for reference)
FROM base as production

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY dist ./dist
COPY package*.json ./

# Create necessary directories
RUN mkdir -p logs uploads

# Set permissions
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start application
CMD ["npm", "start"]