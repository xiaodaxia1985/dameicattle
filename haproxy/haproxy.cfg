global
    daemon
    log stdout local0 info
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    
    # SSL配置
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+CHACHA20:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    # 性能优化
    tune.ssl.default-dh-param 2048
    tune.bufsize 32768
    tune.maxrewrite 1024

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout check 10s
    
    # 错误页面
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# 统计页面
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:cattle_admin_2024

# HTTP前端 - 重定向到HTTPS
frontend http_frontend
    bind *:80
    
    # ACME挑战
    acl acme_challenge path_beg /.well-known/acme-challenge/
    use_backend acme_backend if acme_challenge
    
    # 重定向到HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS前端
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/cattle-management.com.pem
    
    # 安全头
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    
    # 域名路由
    acl is_api hdr(host) -i api.cattle-management.com
    acl is_admin hdr(host) -i admin.cattle-management.com
    acl is_main hdr(host) -i cattle-management.com www.cattle-management.com
    
    # API路由
    acl api_path path_beg /api/
    
    # 限流
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 20 }
    
    # 后端选择
    use_backend api_backend if is_api or api_path
    use_backend admin_backend if is_admin
    use_backend web_backend if is_main
    
    default_backend web_backend

# Web前端后端
backend web_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # 健康检查
    default-server check inter 10s fall 3 rise 2
    
    server web1 frontend:80 check
    server web2 frontend:80 check backup

# API后端
backend api_backend
    balance leastconn
    option httpchk GET /api/v1/health
    http-check expect status 200
    
    # 会话保持 (如果需要)
    # cookie SERVERID insert indirect nocache
    
    # 健康检查
    default-server check inter 5s fall 2 rise 3
    
    server api1 backend-1:3000 check
    server api2 backend-2:3000 check
    server api3 backend-3:3000 check backup

# 管理后台后端
backend admin_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # IP白名单 (可选)
    # acl allowed_ips src 192.168.1.0/24 10.0.0.0/8
    # http-request deny unless allowed_ips
    
    default-server check inter 10s fall 3 rise 2
    
    server admin1 frontend:80 check

# ACME挑战后端
backend acme_backend
    server acme_server 127.0.0.1:8080 check

# PostgreSQL负载均衡 (读写分离)
listen postgres_write
    bind *:5432
    mode tcp
    balance first
    option tcp-check
    
    server postgres-master postgres-patroni-1:5432 check
    server postgres-backup postgres-patroni-2:5432 check backup

listen postgres_read
    bind *:5433
    mode tcp
    balance roundrobin
    option tcp-check
    
    server postgres-read1 postgres-patroni-1:5432 check
    server postgres-read2 postgres-patroni-2:5432 check

# Redis负载均衡
listen redis_cluster
    bind *:6379
    mode tcp
    balance first
    option tcp-check
    
    server redis-master redis-master:6379 check
    server redis-slave redis-slave:6379 check backup