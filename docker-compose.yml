version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:14-alpine
    container_name: cattle-postgres
    environment:
      POSTGRES_DB: cattle_management
      POSTGRES_USER: cattle_user
      POSTGRES_PASSWORD: dianxin99
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/migrations:/docker-entrypoint-initdb.d
    networks:
      - cattle-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:6-alpine
    container_name: cattle-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cattle-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: cattle-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: cattle_management
      DB_USER: cattle_user
      DB_PASSWORD: dianxin99
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-jwt-secret-key
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - cattle-network
    restart: unless-stopped
    command: npm run dev

  # 前端Web服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: cattle-frontend
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - cattle-network
    restart: unless-stopped
    command: npm run dev

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: cattle-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - cattle-network
    restart: unless-stopped

  # 数据库管理工具 (可选)
  adminer:
    image: adminer:latest
    container_name: cattle-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - cattle-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  cattle-network:
    driver: bridge